import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { headers } from "next/headers";
import { ThemeProvider } from "@/components/providers/theme";
import { THEME_COOKIE_KEY } from "@/lib/cookies";
import { QueryProvider } from "@/components/providers/query";
import PrivyProvider from "@/components/providers/privy";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const headerStore = await headers();
  const nonce = headerStore.get('x-nonce') ?? undefined;

  return (
    <html lang="en" suppressHydrationWarning>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased flex flex-col min-h-screen`}
      >
        <ThemeProvider
          storageKey={THEME_COOKIE_KEY}
          attribute="class"
          disableTransitionOnChange
          nonce={nonce}
        >
          <QueryProvider nonce={nonce}>
            <PrivyProvider>
              {children}
            </PrivyProvider>
          </QueryProvider>
        </ThemeProvider>
      </body>
    </html>
  );
}
